{"version":3,"sources":["components/single-movie-background-poster/no_photo.jpg","components/wishlist-content/no_photo.jpg","components/not-found-content/img/image-asset.jpeg","registerServiceWorker.js","components/header/logo.svg","utils/api.js","components/header/header.js","components/header/index.js","components/main-title/index.js","components/main-title/main-title.js","components/sidebar/index.js","components/sidebar/sidebar.js","components/card-item/index.js","components/card-item/card-item.js","components/spinner/index.js","components/spinner/spinner.js","components/card-items-list/index.js","components/card-items-list/card-items-list.js","pages/home.js","components/single-movie-background-poster/index.js","components/single-movie-background-poster/single-movie-background-poster.js","components/single-movie-tabs/index.js","components/single-movie-tabs/single-movie-tabs.js","pages/single-movie.js","components/wishlist-header/index.js","components/wishlist-header/wishlist-header.js","components/wishlist-content/index.js","components/wishlist-content/wishlist-content.js","pages/wishlist.js","components/not-found-content/index.js","components/not-found-content/not-found-content.js","pages/not-found.js","components/footer/index.js","components/footer/footer.js","components/app/index.js","components/app/app.js","index.js","components/card-item/no_photo.jpg"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","y1","x2","y2","gradientUnits","offset","stopColor","_ref4","className","d","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","API_URL","API_KEY_3","NavbarPage","isOpen","searchValue","toggleCollapse","setState","onValueChange","event","value","history","wishlistCount","addBage","color","dark","expand","onClick","push","navbar","left","exact","to","right","onSubmit","preventDefault","url","fetch","response","json","data","onSearchSubmit","results","waves","type","placeholder","aria-label","onChange","Component","Header","withRouter","MainTitle","size","Sidebar","genreList","languageList","onClearFilterSidebar","currentGenre","onClearFilter","newGenreList","genres","addGenre","language","sort_by","removeGenre","onChangeLanguage","onChangeSort","currentGenreIdList","map","item","genresListContent","genre","name","isActive","selectSortResult","selectLanguage","iso_639_1","english_name","lg","CardItem","backdrop","imgUrl","overview","voteAverage","addMovieWishlist","removeMovieWishlist","hasWishlist","voteAverageSum","md","icon","far","src","noPhoto","text","background","backgroundPadding","styles","buildStyles","backgroundColor","textColor","pathColor","trailColor","Spinner","role","CardItemsList","changeCurrentPage","currentPage","movieData","totalPages","movieWishlistIndexList","movieWishlist","movie","content","poster_path","vote_average","backdrop_path","wishlistData","filter","pagination","previousLabel","nextLabel","breakLabel","pageCount","initialPage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","previousClassName","nextClassName","breakClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextLinkClassName","activeClassName","Home","SingleMovieBackgroundPoster","link","poster","releaseDate","runtime","tagline","vote","genreLi","idx","dateYear","split","slice","join","linkContent","href","rel","chartContent","style","backgroundImage","date","Date","Intl","DateTimeFormat","year","month","day","formatToParts","getFormattedDate","toUpperCase","minutesPerHour","roundedRuntime","Math","floor","getTime","abs","runtimeContent","SingleMovieTabs","videosData","postersData","recomendationsData","activeItem","getDataVideos","newData","getDataPosters","backdrops","getDataRecomendations","toggle","tab","e","videoContent","posterContent","imgURL","file_path","alt","recomendationsContent","active","tabId","SingleMovie","checkHasWishlist","number","toString","reverse","budget","homepage","original_language","release_date","revenue","status","factsInfo","convertNumber","WishlistHeader","textWhite","whiteSpace","WishlistContent","inx","Wishlist","tableWishlist","responsive","noWishlist","NotFoundContent","img1","NotFound","Footer","App","thisMovieWishlist","localStorage","getItem","JSON","parse","isSearchActive","newMovieWishlist","setItem","stringify","selected","scrollTo","top","behavior","newGenreIdList","total_pages","getMovies","prevProps","prevState","path","render","params","component","ReactDOM","document","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,uaCUrCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,mECtEjE,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAI,EAAqB,IAAMoB,cAAc,OAAQ,KAAmB,IAAMA,cAAc,QAAS,KAAM,uCAAqD,IAAMA,cAAc,iBAAkB,CACpMC,GAAI,kBACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,cAAe,kBACD,IAAML,cAAc,OAAQ,CAC1CM,OAAQ,EACRC,UAAW,YACI,IAAMP,cAAc,OAAQ,CAC3CM,OAAQ,IACRC,UAAW,YACI,IAAMP,cAAc,OAAQ,CAC3CM,OAAQ,EACRC,UAAW,cAGT,EAAqB,IAAMP,cAAc,QAAS,KAAM,WAExDQ,EAAqB,IAAMR,cAAc,IAAK,CAChDC,GAAI,UACJ,YAAa,WACC,IAAMD,cAAc,IAAK,CACvCC,GAAI,YACJ,YAAa,WACC,IAAMD,cAAc,OAAQ,CAC1CS,UAAW,QACXC,EAAG,2pDAGD,EAAU,SAAiBC,GAC7B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQvB,EAAyBoB,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMX,cAAc,MAAOvB,EAAS,CACtDsC,QAAS,mBACTC,IAAKJ,GACJE,GAAQ,OAAiBG,IAAVJ,EAAsB,EAAQA,EAAqB,IAAMb,cAAc,QAAS,KAAMa,GAAS,KAAML,IAGrHU,EAA0B,IAAMC,YAAW,SAAUL,EAAOE,GAC9D,OAAoB,IAAMhB,cAAc,EAASvB,EAAS,CACxDmC,OAAQI,GACPF,OCpDQM,GDsDE,I,OCtDQ,gCAEVC,EAAY,mCCgBnBC,E,4MACJnD,MAAQ,CACNoD,QAAQ,EACRC,YAAa,I,EAGfC,eAAiB,WACf,EAAKC,SAAS,CAAEH,QAAS,EAAKpD,MAAMoD,U,EAGtCI,cAAgB,SAAAC,GACd,EAAKF,SAAS,CAAEF,YAAaI,EAAMhD,OAAOiD,S,uDAGlC,IAAD,OAECL,EAAgBlC,KAAKnB,MAArBqD,YAFD,EAOHlC,KAAKwB,MAFPgB,EALK,EAKLA,QACAC,EANK,EAMLA,cAGIC,EAAUD,EAAgB,kBAAC,IAAD,CAAUE,MAAM,SAASxB,UAAU,QAASsB,GAA6B,GACzG,OACE,kBAAC,IAAD,CAAWtB,UAAU,cAAcwB,MAAM,eAAeC,MAAI,EAACC,OAAO,MAClE,kBAAC,IAAD,KACE,yBACE1B,UAAU,cACV2B,QAAU,kBAAMN,EAAQO,KAAK,kBAE7B,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAkBD,QAAS9C,KAAKmC,iBAChC,kBAAC,IAAD,CAAaxB,GAAG,kBAAkBsB,OAAQjC,KAAKnB,MAAMoD,OAAQe,QAAM,GACjE,kBAAC,IAAD,CAAcC,MAAI,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,OAAK,EAACC,GAAG,gBAArB,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYD,OAAK,EAACC,GAAG,wBAArB,YAAuDT,KAG3D,kBAAC,IAAD,CAAcU,OAAK,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAW,SAAAf,GACTA,EAAMgB,iBACNd,EAAQO,KAAK,gBACb,IAAMQ,EAAG,UAAOzB,EAAP,iCAAyCC,EAAzC,iCAA6E,EAAKlD,MAAMqD,YAAxF,WACT,EAAKE,SAAS,CAAEF,YAAa,KAE7BsB,MAAMD,GACHhF,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GACJ,EAAKnC,MAAMoC,eAAeD,EAAKE,aAIrCC,OAAK,GAEL,yBAAK3C,UAAU,gBACb,2BACEA,UAAU,uBACV4C,KAAK,OACLC,YAAY,SACZC,aAAW,SACX1B,MAAQL,EACRgC,SAAWlE,KAAKqC,0B,GAvEX8B,aChBVC,EDmGAC,YAAWrC,GEnGXsC,G,OCMG,SAAC,GAAe,IAAb/C,EAAY,EAAZA,MACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQgD,KAAK,MACX,wBAAIpD,UAAU,QAASI,OCVhBiD,G,mNCWb3F,MAAQ,CACN4F,UAAW,GACXC,aAAc,I,EAwBhBC,qBAAuB,WACrB,EAAKvC,SAAS,CAAEwC,aAAc,KAC9B,EAAKpD,MAAMqD,iB,kEAvBQ,IAAD,OAElBrB,MAAM,GAAD,OAAK1B,EAAL,qCAA2CC,IAC7CxD,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GACJ,IAAMmB,EAAenB,EAAKoB,OAC1B,EAAK3C,SAAS,CAAEqC,UAAWK,OAG/BtB,MAAM,GAAD,OAAK1B,EAAL,4CAAkDC,IACpDxD,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GACJ,EAAKvB,SAAS,CAAEsC,aAAcf,S,+BAU1B,IAAD,EAKH3D,KAAKnB,MAFP4F,EAHK,EAGLA,UACAC,EAJK,EAILA,aAJK,EAeH1E,KAAKwB,MAPPwD,EARK,EAQLA,SACAJ,EATK,EASLA,aACAK,EAVK,EAULA,SACAC,EAXK,EAWLA,QACAC,EAZK,EAYLA,YACAC,EAbK,EAaLA,iBACAC,EAdK,EAcLA,aAGIC,EAAqBV,EAAaW,KAAI,SAAAC,GAAI,OAAIA,EAAK7E,MAEnD8E,EACJ,yBAAKtE,UAAU,eAEXsD,EAAUc,KAAI,SAAAG,GAAU,IACd/E,EAAa+E,EAAb/E,GAAIgF,EAASD,EAATC,KACNC,GAA+C,IAApCN,EAAmBjF,QAAQM,GAC5C,OACE,4BACEQ,UAAS,cAAWyE,EAAW,SAAW,IAC1CjG,IAAMgB,EACNmC,QAAU,kBAAM8C,EAAWT,EAAYO,GAASV,EAASU,KAErDC,OAQVE,EAAmB,4BACvB1E,UAAU,iCACV+C,SAAW,SAAA5B,GAAK,OAAI+C,EAAa/C,EAAMhD,OAAOiD,QAC9CA,MAAQ2C,GAER,4BAAQ3C,MAAM,mBAAd,yBACA,4BAAQA,MAAM,kBAAd,wBACA,4BAAQA,MAAM,qBAAd,qBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,qBAAd,2BACA,4BAAQA,MAAM,oBAAd,0BACA,4BAAQA,MAAM,uBAAd,eACA,4BAAQA,MAAM,sBAAd,gBAGIuD,EAAiB,4BACnB5B,SAAW,SAAA5B,GAAK,OAAI8C,EAAkB9C,EAAMhD,OAAOiD,QACnDpB,UAAU,sCACVoB,MAAQ0C,GAERP,EAAaa,KAAI,gBAAGQ,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAd,OAAkC,4BAAQrG,IAAMoG,EAAYxD,MAAQwD,GAAcC,OAGvG,OACI,kBAAC,IAAD,CAAQC,GAAG,IAAI9E,UAAU,WACzB,kBAAC,IAAD,CAASA,UAAU,QACjB,kBAAC,IAAD,CAAeA,UAAU,sBAAsBwB,MAAM,gBAArD,WACA,kBAAC,IAAD,CAAaxB,UAAU,OACrB,yBAAMA,UAAU,QACd,+CACE0E,GAGJ,yBAAM1E,UAAU,QACd,wCACE2E,GAGJ,yBAAM3E,UAAU,QACd,sCACEsE,GAGJ,kBAAC,IAAD,CACE3C,QAAU9C,KAAK2E,qBACfJ,KAAK,KACLpD,UAAU,iDAHZ,uB,GAlHUgD,c,yBCVP+B,G,cCwEA7B,aAtDE,SAAA7C,GAAU,IAEvB2E,EAUE3E,EAVF2E,SACA3D,EASEhB,EATFgB,QACA4D,EAQE5E,EARF4E,OACAzF,EAOEa,EAPFb,GACA0F,EAME7E,EANF6E,SACA9E,EAKEC,EALFD,MACA+E,EAIE9E,EAJF8E,YACAC,EAGE/E,EAHF+E,iBACAC,EAEEhF,EAFFgF,oBACAC,EACEjF,EADFiF,YAEIC,EAA+B,GAAdJ,EAEvB,OACE,kBAAC,IAAD,CAAQK,GAAG,IAAIxF,UAAU,kBACvB,kBAAC,IAAD,KACE,yBAAKA,UAAU,mBACb,4BACEA,UAAS,iCAA8BsF,EAAc,SAAW,IAChE3D,QAPc,kBAAM2D,EAAcD,IAAwBD,MASxDE,EAAc,kBAAC,IAAD,CAASG,KAAK,UAAa,kBAAC,IAAD,CAASC,KAAG,EAACD,KAAK,WAE/D,yBACEzF,UAAU,yBACV2B,QAAU,kBAAMN,EAAQO,KAAR,4BAAmCpC,MAEnD,kBAAC,IAAD,CAAcQ,UAAU,YAAY2F,IAAMV,EAAM,0CAAsCA,GAAWW,IAAUjD,OAAK,IAChH,kBAAC,IAAD,CAAc3C,UAAU,sBAAsB2F,IAAMX,EAAQ,0CAAuCA,GAAcY,IAAUjD,OAAK,KAElI,kBAAC,IAAD,CACEvB,MAAQmE,EACRM,KAAI,UAAKN,EAAL,KACJO,YAAU,EACVC,kBAAmB,EACnBC,OAAQC,YAAY,CAClBC,gBAAiB,UACjBC,UAAW,OACXC,UAAW,OACXC,WAAY,+BAIlB,kBAAC,IAAD,CAAarG,UAAU,OACrB,kBAAC,IAAD,CAAcA,UAAU,OAAQI,GAChC,kBAAC,IAAD,KAAe8E,UCjEVoB,G,OCEC,WACd,OACE,yBAAKtG,UAAU,eACb,yBAAKA,UAAU,4BAA4BuG,KAAK,UAC9C,0BAAMvG,UAAU,WAAhB,kB,kBCNOwG,G,OCSO,SAAAnG,GAAU,IAE5BoG,EAOEpG,EAPFoG,kBACAC,EAMErG,EANFqG,YACAC,EAKEtG,EALFsG,UACAvB,EAIE/E,EAJF+E,iBACAC,EAGEhF,EAHFgF,oBACAuB,EAEEvG,EAFFuG,WAGIC,EADFxG,EADFyG,cAE2C1C,KAAI,SAAA2C,GAAK,OAAIA,EAAMvH,MAE1DwH,EAAUL,EAAUvC,KAAI,YAMrB,IALL5E,EAKI,EALJA,GACayF,EAIT,EAJJgC,YACA/B,EAGI,EAHJA,SAAU9E,EAGN,EAHMA,MACI+E,EAEV,EAFJ+B,aACelC,EACX,EADJmC,cAEIC,EAAeT,EAAUU,QAAO,SAAAN,GAAK,OAAIA,EAAMvH,KAAOA,KACtD8F,GAAwD,IAAzCuB,EAAuB3H,QAAQM,GACpD,OACE,kBAAC,EAAD,CACEA,GAAKA,EACLhB,IAAMgB,EACNyF,OAASA,EACTC,SAAWA,EACX9E,MAAQA,EACR4E,SAAWA,EACXG,YAAcA,EACdE,oBAAsB,kBAAMA,EAAoB+B,IAChDhC,iBAAmB,kBAAMA,EAAiBgC,IAC1C9B,YAAcA,OAKdgC,EAAa,yBAAKtH,UAAU,YAAY8C,aAAW,mBACvD,kBAAC,IAAD,CACEyE,cAAgB,SAChBC,UAAY,SACZC,WAAa,MACbC,UAAYd,EACZe,YAAcjB,EAAe,EAC7BkB,qBAAuB,EACvBC,mBAAqB,EACrBC,aAAe,SAAAtF,GAAI,OAAIiE,EAAkBjE,IACzCuF,mBAAqB,aACrBC,cAAgB,YAChBC,kBAAoB,iBACpBC,cAAgB,iBAChBC,eAAiB,YACjBC,kBAAoB,YACpBC,mBAAqB,YACrBC,sBAAwB,YACxBC,kBAAoB,YACpBC,gBAAkB,YAItB,OACE,kBAAC,IAAD,CAAQ1D,GAAG,IAAI9E,UAAU,mBACvB,kBAAC,IAAD,KACI2G,EAAUrI,OAAS,EAAI0I,EAAU,kBAAC,EAAD,OAGnCM,KC1BOmB,EA7CF,SAAC,GAgBO,IAfL5E,EAeI,EAfJA,SACAuB,EAcI,EAdJA,iBACAqB,EAaI,EAbJA,kBACAhD,EAYI,EAZJA,aACAiD,EAWI,EAXJA,YACA5C,EAUI,EAVJA,SACA6C,EASI,EATJA,UACAG,EAQI,EARJA,cACA9C,EAOI,EAPJA,YACAqB,EAMI,EANJA,oBACAtB,EAKI,EALJA,QACA6C,EAII,EAJJA,WACA1C,EAGI,EAHJA,aACAD,EAEI,EAFJA,iBACAP,EACI,EADJA,cAEd,OACE,oCACE,kBAAC,EAAD,CAAWtD,MAAM,UACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEyD,SAAWA,EACXJ,aAAeA,EACfK,SAAWA,EACXC,QAAUA,EACVC,YAAcA,EACdE,aAAeA,EACfD,iBAAmBA,EACnBP,cAAgBA,IAElB,kBAAC,EAAD,CACE0B,iBAAmBA,EACnBqB,kBAAoBA,EACpBC,YAAcA,EACdC,UAAYA,EACZtB,oBAAsBA,EACtByB,cAAgBA,EAChBF,WAAaA,O,2BC1CR8B,ECgBqB,SAAArI,GAAU,IAE1C+E,EAcE/E,EAdF+E,iBACAJ,EAaE3E,EAbF2E,SACApB,EAYEvD,EAZFuD,OACA0B,EAWEjF,EAXFiF,YACAqD,EAUEtI,EAVFsI,KACA7E,EASEzD,EATFyD,SACAoB,EAQE7E,EARF6E,SACA0D,EAOEvI,EAPFuI,OACAC,EAMExI,EANFwI,YACAxD,EAKEhF,EALFgF,oBACAyD,EAIEzI,EAJFyI,QACAC,EAGE1I,EAHF0I,QACAvE,EAEEnE,EAFFmE,KAMIe,EAAwB,GAJ1BlF,EADF2I,KAMEC,EAAUvM,QAAQkH,IAAWA,EAAOQ,KAAI,SAACC,EAAM6E,GAAP,OAAgB,wBAAI1K,IAAM0K,GAAQ7E,EAAKG,SAC7E2E,EAAWN,GAAeA,EAAYO,MAAM,IAAIC,MAAM,EAAG,GAAGC,KAAK,IAgBjEC,EACHZ,GAAS,yBAAK3I,UAAU,2BACvB,uBACE7B,OAAO,SACPqL,KAAOb,EACPc,IAAI,uBAHN,iBAQEC,EACJ,oCACE,kBAAC,IAAD,CACEtI,MAAQmE,EACRM,KAAI,UAAMN,EAAN,KACJO,YAAU,EACVC,kBAAmB,EACnBC,OAAQC,YAAY,CAClBC,gBAAiB,UACjBC,UAAW,OACXC,UAAW,OACXC,WAAY,8BAGhB,yBAAKrG,UAAU,SAAf,OAA2B,6BAA3B,UAMJ,OACE,yBACEA,UAAS,6BAAwBgF,GAAY,aAC7C2E,MAAQ3E,GAAY,CAAE4E,gBAAgB,8DAAD,OAAiE5E,EAAjE,QAErC,kBAAC,IAAD,MACMR,GACF,kBAAC,IAAD,CAAQxE,UAAU,gCAChB,kBAAC,IAAD,CAAQwF,GAAG,MACT,kBAAC,EAAD,QAIHhB,GACD,kBAAC,IAAD,CAAQxE,UAAU,aAChB,kBAAC,IAAD,CAAQwF,GAAG,KACT,uBACEgE,KAAQb,GAAe,GACvBxK,OAAO,SACPsL,IAAI,uBAEJ,kBAAC,IAAD,CAAczJ,UAAU,YAAY2F,IAAMiD,EAAM,UAvE9C,8BAuE8C,gBAAwBA,GAAYhD,IAAUjD,OAAK,MAGvG,kBAAC,IAAD,CAAQ6C,GAAG,IAAIxF,UAAU,oCACvB,wBAAIA,UAAU,iCACVwE,EACF,0BAAMxE,UAAU,mEAAhB,IAAqFmJ,GAAQ,WAASA,EAAT,OAE/F,yBAAKnJ,UAAU,sCACb,0BAAMA,UAAU,2BAA4B6I,GApEjC,WACvB,IAAMgB,EAAO,IAAIC,KAAKjB,GADO,EAEN,IAAIkB,KAAKC,eAAe,KAAM,CAAEC,KAAM,UAAWC,MAAO,UAAWC,IAAK,YACpBC,cAAcP,GAH5D,mBAGbK,EAHa,KAGpB9I,MAAyB+I,EAHL,KAGF/I,MAAuB6I,EAHrB,KAGc7I,MAE3C,MAAM,GAAN,OAAU+I,EAAV,YAAiBD,EAAjB,YAA0BD,GA+D6CI,IAC3D,0BAAMrK,UAAU,+BAAhB,KAAkD8D,GAAYA,EAASwG,cAAvE,KACA,wBAAItK,UAAU,UACViJ,GAEJ,0BAAMjJ,UAAU,WAhFP,WACrB,IAAMuK,EAAiBzB,EAAU,GAC3B0B,EAAiBC,KAAKC,MAAMH,GAC5BI,EAAU7B,EAA6B,GAAjB0B,EAC5B,MAAM,GAAN,OAAWC,KAAKC,MAAOF,GAAvB,aAA8CC,KAAKG,IAAKD,GAAxD,KA4EwCE,KAE9B,wBAAI7K,UAAU,2BACZ,wBAAIA,UAAU,SACV0J,GAEJ,4BACE,4BACE1J,UAAS,iCAA8BsF,IAAgB,SAAW,IAClE3D,QA9CM,kBAAM2D,IAAgBD,IAAwBD,MAgDlDE,IAAgB,kBAAC,IAAD,CAASG,KAAK,UAAa,kBAAC,IAAD,CAASC,KAAG,EAACD,KAAK,aAIrE,yBAAKzF,UAAU,8BAA+B+I,GAC9C,yBAAK/I,UAAU,kCACb,4BAAMwE,GACN,2BAAKU,IAELqE,OC3IDuB,G,mNCabpN,MAAQ,CACNqN,WAAY,GACZC,YAAa,GACbC,mBAAoB,GACpBC,WAAY,K,EAGdC,cAAgB,WACd,IAAM/I,EAAG,UAAOzB,EAAP,kBAA0B,EAAKN,MAAMb,GAArC,2BAA4DoB,GACrEyB,MAAMD,GACHhF,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GACJ,IAAM4I,EAAU5I,EAAKE,QACrB,EAAKzB,SAAS,CAAE8J,WAAYK,Q,EAIlCC,eAAiB,WACf,IAAMjJ,EAAG,UAAOzB,EAAP,kBAA0B,EAAKN,MAAMb,GAArC,2BAA4DoB,GACrEyB,MAAMD,GACHhF,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEfnF,MAAK,SAAAoF,GACN,IAAM4I,EAAU5I,EAAK8I,UACrB,EAAKrK,SAAS,CAAE+J,YAAaI,Q,EAInCG,sBAAwB,WACtB,IAAMnJ,EAAG,UAAOzB,EAAP,kBAA0B,EAAKN,MAAMb,GAArC,oCAAqEoB,EAArE,0BACTyB,MAAMD,GACHhF,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GACJ,IAAM4I,EAAU5I,EAAKE,QACrB,EAAKzB,SAAS,CAAEgK,mBAAoBG,Q,EAI1CI,OAAS,SAAAC,GAAG,OAAI,SAAAC,GACV,EAAKhO,MAAMwN,aAAeO,GAC5B,EAAKxK,SAAS,CACZiK,WAAYO,M,kEAMX5M,KAAKwB,MAAMb,KAChBX,KAAKsM,gBACLtM,KAAKwM,iBACLxM,KAAK0M,2B,+BAGG,IAAD,EAMH1M,KAAKnB,MAHPqN,EAHK,EAGLA,WACAC,EAJK,EAILA,YACAC,EALK,EAKLA,mBAGIU,EACJ,yBAAK3L,UAAU,eACX+K,EAAWzM,QAAUyM,EAAW3G,KAAI,YAAoB,IAAjB5F,EAAgB,EAAhBA,IAAKgG,EAAW,EAAXA,KAC5C,OAAO,4BAAQxE,UAAU,wBAAwBwE,KAAOA,EAAOpE,MAAQoE,EAAOhG,IAAMA,EAAMmH,IAAM,iCAAmCnH,QAKnIoN,EACJ,yBAAK5L,UAAU,eACXgL,EAAY1M,QAAU0M,EAAY5G,KAAI,WAAwB8E,GAAS,IAAnB2C,EAAkB,EAA7BC,UACzC,OAAO,yBAAKnG,IAAM,kCAAoCkG,EAASrN,IAAMqN,EAASE,IAAM,UAAY7C,EAAMlJ,UAAU,6BAKhHgM,EACJ,yBAAKhM,UAAU,eACTiL,EAAmB3M,QAAU2M,EAAmB7G,KAAI,YAI/C,IAHL5E,EAGI,EAHJA,GACaqM,EAET,EAFJ5E,YACA7G,EACI,EADJA,MAEF,OACE,kBAAC,IAAD,CACEJ,UAAU,eACVxB,IAAMgB,GAGJqM,GACE,yBAAK7L,UAAU,sBACb,yBAAK2F,IAAM,kCAAoCkG,EAASE,IAAM3L,EAAQJ,UAAU,qBAItF,kBAAC,IAAD,KAAgBI,QAO1B,OACE,yBAAKJ,UAAU,qBACb,wBAAIA,UAAU,QAAd,SACA,kBAAC,IAAD,CAAQA,UAAU,YAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY2I,MAAI,EAAC3G,GAAG,IAAIiK,OAAkC,MAA1BpN,KAAKnB,MAAMwN,WAAoBvJ,QAAS9C,KAAK2M,OAAO,KAAMjF,KAAK,OAA/F,WAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYoC,MAAI,EAAC3G,GAAG,IAAIiK,OAAkC,MAA1BpN,KAAKnB,MAAMwN,WAAoBvJ,QAAS9C,KAAK2M,OAAO,KAAMjF,KAAK,OAA/F,YAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYoC,MAAI,EAAC3G,GAAG,IAAIiK,OAAkC,MAA1BpN,KAAKnB,MAAMwN,WAAoBvJ,QAAS9C,KAAK2M,OAAO,KAAMjF,KAAK,OAA/F,qBAKJ,kBAAC,IAAD,CAAe2E,WAAYrM,KAAKnB,MAAMwN,YACpC,kBAAC,IAAD,CAAYgB,MAAM,IAAI3F,KAAK,YACvBoF,GAEJ,kBAAC,IAAD,CAAYO,MAAM,IAAI3F,KAAK,YACvBqF,GAEJ,kBAAC,IAAD,CAAYM,MAAM,IAAI3F,KAAK,YACvByF,S,GAzI+BhJ,cCLxBmJ,E,4MACnBzO,MAAQ,CACNiJ,UAAW,I,EAcbyF,iBAAmB,WACjB,QAAK,EAAK1O,MAAMiJ,UAAUnH,IACL,EAAKa,MAAMyG,cAAcO,QAAO,SAAAN,GAAK,OAAIA,EAAMvH,KAAO,EAAK9B,MAAMiJ,UAAUnH,MAC5ElB,OAAS,G,kEAdV,IAAD,OACZ8D,EAAG,UAAOzB,EAAP,kBAA0B9B,KAAKwB,MAAMb,GAArC,oBAAqDoB,EAArD,mBACTyB,MAAMD,GACHhF,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GACJ,EAAKvB,SAAS,CAAE0F,UAAWnE,S,oCAUnB6J,GACZ,OAAOA,EAAOC,WAAWlD,MAAM,IAAImD,UAAUjD,KAAK,IAAIxM,MAAM,WAAWyP,UACpEnI,KAAI,SAAAC,GAAI,OAAIA,EAAKiI,WAAWlD,MAAM,IAAImD,UAAUjD,KAAK,OAAKA,OAAS,Q,+BAG9D,IAAD,SAiBHzK,KAAKnB,MAAMiJ,UAdE3B,EAHV,EAGLmC,cACAqF,EAJK,EAILA,OACA5I,EALK,EAKLA,OACU+E,EANL,EAML8D,SACmB3I,EAPd,EAOL4I,kBACAxH,EARK,EAQLA,SACa0D,EATR,EASL3B,YACc4B,EAVT,EAUL8D,aACAC,EAXK,EAWLA,QACA9D,EAZK,EAYLA,QACA+D,EAbK,EAaLA,OACA9D,EAdK,EAcLA,QACOvE,EAfF,EAeLpE,MACc4I,EAhBT,EAgBL9B,aAhBK,EAuBHrI,KAAKwB,MAHPb,EApBK,EAoBLA,GACA4F,EArBK,EAqBLA,iBACAC,EAtBK,EAsBLA,oBAGIyH,EACJ,wBAAI9M,UAAU,cACZ,4BAAI,4BAAQA,UAAU,qBAAlB,UAAqD,0BAAMA,UAAU,oBAAqB6M,IAC9F,4BAAI,4BAAQ7M,UAAU,qBAAlB,qBAAgE,0BAAMA,UAAU,oBAAqB8D,GAAYA,EAASwG,gBAC9H,4BAAI,4BAAQtK,UAAU,qBAAlB,UAAqD,0BAAMA,UAAU,oBAAhB,KAAuCwM,GAAU3N,KAAKkO,cAAcP,KAC7H,4BAAI,4BAAQxM,UAAU,qBAAlB,WAAsD,0BAAMA,UAAU,oBAAhB,KAAuC4M,GAAW/N,KAAKkO,cAAcH,MAInI,OACE,oCACE,kBAAC,EAAD,CACExH,iBAAqB,kBAAMA,EAAiB,CAAC,EAAK1H,MAAMiJ,aACxD3B,SAAaA,EACbpB,OAAWA,EACX+E,KAASA,EACT7E,SAAaA,EACboB,SAAaA,EACb0D,OAAWA,EACXC,YAAgBA,EAChBxD,oBAAwB,kBAAMA,EAAoB,CAAC,EAAK3H,MAAMiJ,aAC9DmC,QAAYA,EACZC,QAAYA,EACZvE,KAASA,EACTwE,KAASA,EACT1D,YAAgBzG,KAAKuN,mBAEvB,kBAAC,IAAD,CAAQpM,UAAU,yBAChB,kBAAC,IAAD,CAAQwF,GAAG,KACPsH,GAEJ,kBAAC,IAAD,CAAQtH,GAAG,KACT,kBAAC,EAAD,CACEhG,GAAKA,W,GArFsBwD,aCP1BgK,G,OCGQ,WACrB,OACE,kBAAC,IAAD,CAAcxL,MAAM,eAAeyL,WAAS,GAC1C,4BACE,iCACA,qCACA,qCACA,wBACEjN,UAAU,cACV2J,MAAO,CAAEuD,WAAY,WACtB,0BAAMlN,UAAU,gBAAhB,UAHD,WAIA,wBAAIA,UAAU,wBAAd,c,kBCdOmN,G,OCOS,SAAC,GAA4C,IAA1CrG,EAAyC,EAAzCA,cAAezB,EAA0B,EAA1BA,oBAClC2B,EAAUF,EAAc1C,KAAI,WAK/BgJ,GAAS,IAJV5N,EAIS,EAJTA,GACaoJ,EAGJ,EAHT3B,YACA7G,EAES,EAFTA,MACc4I,EACL,EADT9B,aAEE,OACE,wBACE1I,IAAMgB,GAEN,wBAAIQ,UAAU,gBAAiBoN,EAAM,GACrC,4BACE,yBACEpN,UAAU,sCAAsC2F,IAAMiD,EAAM,yCAAsCA,GAAYhD,IAC9GmG,IAAM3L,KAGV,wBAAIJ,UAAU,gBAAiBI,GAC/B,wBACEJ,UAAU,4BACTgJ,GACH,wBACEhJ,UAAU,4BAEV,kBAAC,IAAD,CACEoD,KAAK,KACL5B,MAAM,MACNxB,UAAU,kBACV2B,QAAU,kBAAM0D,EAAoB,CAAC,CAAE7F,UAJzC,eAUV,OACE,kBAAC,IAAD,KACIwH,KCpBOqG,EApBE,SAAC,GAA4C,IAA1CvG,EAAyC,EAAzCA,cAAezB,EAA0B,EAA1BA,oBAE3BiI,EAAgB,kBAAC,IAAD,CAAUC,YAAU,GACxC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEzG,cAAgBA,EAChBzB,oBAAsBA,KAIpBmI,EAAa,8EAEnB,OACE,yBAAKxN,UAAU,YACb,kBAAC,EAAD,CAAWI,MAAM,aACf0G,EAAcxI,OAAS,EAAIgP,EAAgBE,I,kBCnBnCC,G,OCGQ,WACtB,OACE,yBAAKzN,UAAU,aACb,yBAAKA,UAAU,wBACb,yBAAK2F,IAAM+H,IAAO3B,IAAI,UAGxB,yBAAK/L,UAAU,mCACb,sDACA,oDAAyB,6BAAzB,iFCLO2N,EANE,WACf,OACE,kBAAC,EAAD,OCHWC,G,OCGA,WACb,OACE,kBAAC,IAAD,CAAQ5N,UAAU,UAChB,kBAAC,IAAD,CACEoD,KAAK,KACLpD,UAAU,4CAFZ,sD,SCNS6N,I,mNCkBbC,kBAAoBnR,OAAOoR,aAAaC,QAAQ,iBAC5CC,KAAKC,MAAMvR,OAAOoR,aAAaC,QAAQ,kBAAoB,G,EAE/DG,gBAAiB,E,EAEjBzQ,MAAQ,CACNgJ,YAAa,EACbjD,aAAc,GACdK,SAAU,QACV6C,UAAW,GACXG,cAAe,EAAKgH,kBACpB/J,QAAS,kBACT6C,WAAY,G,EAkCdvB,oBAAsB,YAAe,IAAX7F,EAAU,oBAAVA,GACxB,EAAKyB,UAAS,SAAAvD,GACZ,IAAM0Q,EAAmB1Q,EAAMoJ,cAAcO,QAAO,SAAAN,GAClD,OAAOA,EAAMvH,KAAOA,KAGtB,OADA7C,OAAOoR,aAAaM,QAAQ,gBAAiBJ,KAAKK,UAAUF,IACrD,CACLtH,cAAesH,O,EAKrBhJ,iBAAmB,SAAA5C,GACjB,EAAKvB,UAAS,SAAAvD,GACZ,IAAM0Q,EAAgB,sBAAO1Q,EAAMoJ,eAAb,YAA+BtE,IAErD,OADA7F,OAAOoR,aAAaM,QAAQ,gBAAiBJ,KAAKK,UAAUF,IACrD,CAAEtH,cAAesH,O,EAI5BlK,aAAe,SAAAH,GACb,EAAK9C,SAAS,CAAE8C,a,EAGlBE,iBAAmB,SAAAH,GACjB,EAAK7C,SAAS,CAAE6C,c,EAGlBJ,cAAgB,WACd,EAAKzC,SAAS,CACZ8C,QAAS,kBACTN,aAAc,GACdK,SAAU,QACV4C,YAAa,K,EAIjB7C,SAAW,SAAArB,GACT,EAAKvB,UAAS,YAAuB,IAApBwC,EAAmB,EAAnBA,aAEf,MAAO,CAAEA,aADY,sBAAOA,GAAP,CAAqBjB,S,EAK9CwB,YAAc,SAAAxB,GACZ,EAAKvB,UAAS,YAEZ,MAAO,CAAEwC,aAFyB,EAAnBA,aACsB4D,QAAO,qBAAG7H,KAAgBgD,EAAKhD,W,EAKxEiH,kBAAoB,SAAAjE,GAClB,IAAM4I,EAAU5I,EAAK+L,SAAW,EAChC,EAAKtN,SAAS,CAAEyF,YAAa0E,IAC7BzO,OAAO6R,SAAS,CAACC,IAAK,EAAGC,SAAU,Y,EAGrCjM,eAAiB,SAAAD,GACf,EAAK2L,gBAAiB,EACtB,EAAKzK,gBACL,EAAKyK,gBAAiB,EACtB,EAAKlN,SAAS,CAAE0F,UAAWnE,K,0DA5FhB,IAAD,OACJmM,EAAiB9P,KAAKnB,MAAM+F,aAAaW,KAAI,SAAAG,GAAK,OAAIA,EAAM/E,MAAI8J,KAAK,KACrEzF,EAAW8K,EAAc,uBAAoBA,GAAoB,GACjEvM,EAAG,UAAOzB,EAAP,mCAA2CC,EAA3C,oBAAkE/B,KAAKnB,MAAMqG,QAA7E,iBAA+FlF,KAAKnB,MAAMgJ,YAA1G,qBAAoI7H,KAAKnB,MAAMoG,UAA/I,OAA4JD,GACrKxB,MAAMD,GACHhF,MAAK,SAAAkF,GACJ,OAAOA,EAASC,UAEjBnF,MAAK,SAAAoF,GAAS,IACLE,EAA0BF,EAA1BE,QAASkM,EAAiBpM,EAAjBoM,YACjB,EAAK3N,SAAS,CACZ0F,UAAWjE,EACXkE,WAAYgI,S,0CAKE/P,KAAKgQ,c,yCAERC,EAAWC,GACvBlQ,KAAKsP,gBAENY,EAAUhL,UAAYlF,KAAKnB,MAAMqG,SAC9BgL,EAAUjL,WAAajF,KAAKnB,MAAMoG,UAClCiL,EAAUtL,eAAiB5E,KAAKnB,MAAM+F,cACtCsL,EAAUrI,cAAgB7H,KAAKnB,MAAMgJ,aAE1C7H,KAAKgQ,c,+BAoEC,IAAD,SASHhQ,KAAKnB,MAPP+F,EAFK,EAELA,aACAiD,EAHK,EAGLA,YACAE,EAJK,EAILA,WACA9C,EALK,EAKLA,SACAC,EANK,EAMLA,QACA4C,EAPK,EAOLA,UACAG,EARK,EAQLA,cAGF,OACE,kBAAC,KAAD,KACE,kBAAC,EAAD,CACExF,cAAgBwF,EAAcxI,OAC9BmE,eAAiB5D,KAAK4D,iBAExB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEuM,KAAK,eACLjN,OAAK,GAEL,kBAAC,EAAD,CACE8B,SAAWhF,KAAKgF,SAChBuB,iBAAmBvG,KAAKuG,iBACxBqB,kBAAoB5H,KAAK4H,kBACzBhD,aAAeA,EACfiD,YAAcA,EACd5C,SAAWA,EACX6C,UAAYA,EACZG,cAAgBA,EAChB9C,YAAcnF,KAAKmF,YACnBqB,oBAAsBxG,KAAKwG,oBAC3BtB,QAAUA,EACV6C,WAAaA,EACb1C,aAAerF,KAAKqF,aACpBD,iBAAmBpF,KAAKoF,iBACxBP,cAAgB7E,KAAK6E,iBAGzB,kBAAC,IAAD,CACEsL,KAAK,uBACLjN,OAAK,GAEL,kBAAC,EAAD,CACE+E,cAAgBA,EAChBzB,oBAAsBxG,KAAKwG,uBAG/B,kBAAC,IAAD,CACE2J,KAAK,wBACLC,OAAS,YAAgB,IACfzP,EADc,EAAZ1C,MACWoS,OAAb1P,GACR,OAAO,kBAAC,EAAD,CACLA,GAAKA,EACLsH,cAAgBA,EAChB1B,iBAAmB,EAAKA,iBACxBC,oBAAsB,EAAKA,yBAIjC,kBAAC,IAAD,CAAO8J,UAAYxB,MAGvB,kBAAC,EAAD,W,GAjLyB3K,c,4BCRjCoM,IAASH,OAAS,kBAAC,GAAD,MAASI,SAASC,eAAe,SjCUpC,WACb,GAA6C,kBAAmBrS,UAAW,CAGzE,GADkB,IAAIsS,IAAIC,cAAwB7S,OAAOC,UAC3C6S,SAAW9S,OAAOC,SAAS6S,OAIvC,OAGF9S,OAAO+S,iBAAiB,QAAQ,WAC9B,IAAM1S,EAAK,UAAMwS,cAAN,sBAEN/S,EAwCX,SAAiCO,GAE/BqF,MAAMrF,GACHI,MAAK,SAAAkF,GAGkB,MAApBA,EAASuK,SACuD,IAAhEvK,EAASqN,QAAQC,IAAI,gBAAgB1Q,QAAQ,cAG7CjC,UAAUC,cAAc2S,MAAMzS,MAAK,SAAAC,GACjCA,EAAayS,aAAa1S,MAAK,WAC7BT,OAAOC,SAASmT,eAKpBhT,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEAzDAmS,CAAwBhT,GAHxBD,EAAgBC,OiCxBxBiT,I,mBCZA1T,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.7242ac5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_photo.54120d3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no_photo.54120d3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-asset.7fc93130.jpeg\";","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:url(#linear-gradient);}\"), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"linear-gradient\",\n  y1: 40.76,\n  x2: 190.24,\n  y2: 40.76,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0,\n  stopColor: \"#90cea1\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.56,\n  stopColor: \"#3cbec9\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#00b3e5\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"Asset 2\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M105.67,36.06h66.9A17.67,17.67,0,0,0,190.24,18.4h0A17.67,17.67,0,0,0,172.57.73h-66.9A17.67,17.67,0,0,0,88,18.4h0A17.67,17.67,0,0,0,105.67,36.06Zm-88,45h76.9A17.67,17.67,0,0,0,112.24,63.4h0A17.67,17.67,0,0,0,94.57,45.73H17.67A17.67,17.67,0,0,0,0,63.4H0A17.67,17.67,0,0,0,17.67,81.06ZM10.41,35.42h7.8V6.92h10.1V0H.31v6.9h10.1Zm28.1,0h7.8V8.25h.1l9,27.15h6l9.3-27.15h.1V35.4h7.8V0H66.76l-8.2,23.1h-.1L50.31,0H38.51ZM152.43,55.67a15.07,15.07,0,0,0-4.52-5.52,18.57,18.57,0,0,0-6.68-3.08,33.54,33.54,0,0,0-8.07-1h-11.7v35.4h12.75a24.58,24.58,0,0,0,7.55-1.15A19.34,19.34,0,0,0,148.11,77a16.27,16.27,0,0,0,4.37-5.5,16.91,16.91,0,0,0,1.63-7.58A18.5,18.5,0,0,0,152.43,55.67ZM145,68.6A8.8,8.8,0,0,1,142.36,72a10.7,10.7,0,0,1-4,1.82,21.57,21.57,0,0,1-5,.55h-4.05v-21h4.6a17,17,0,0,1,4.67.63,11.66,11.66,0,0,1,3.88,1.87A9.14,9.14,0,0,1,145,59a9.87,9.87,0,0,1,1,4.52A11.89,11.89,0,0,1,145,68.6Zm44.63-.13a8,8,0,0,0-1.58-2.62A8.38,8.38,0,0,0,185.63,64a10.31,10.31,0,0,0-3.17-1v-.1a9.22,9.22,0,0,0,4.42-2.82,7.43,7.43,0,0,0,1.68-5,8.42,8.42,0,0,0-1.15-4.65,8.09,8.09,0,0,0-3-2.72,12.56,12.56,0,0,0-4.18-1.3,32.84,32.84,0,0,0-4.62-.33h-13.2v35.4h14.5a22.41,22.41,0,0,0,4.72-.5,13.53,13.53,0,0,0,4.28-1.65,9.42,9.42,0,0,0,3.1-3,8.52,8.52,0,0,0,1.2-4.68A9.39,9.39,0,0,0,189.66,68.47ZM170.21,52.72h5.3a10,10,0,0,1,1.85.18,6.18,6.18,0,0,1,1.7.57,3.39,3.39,0,0,1,1.22,1.13,3.22,3.22,0,0,1,.48,1.82,3.63,3.63,0,0,1-.43,1.8,3.4,3.4,0,0,1-1.12,1.2,4.92,4.92,0,0,1-1.58.65,7.51,7.51,0,0,1-1.77.2h-5.65Zm11.72,20a3.9,3.9,0,0,1-1.22,1.3,4.64,4.64,0,0,1-1.68.7,8.18,8.18,0,0,1-1.82.2h-7v-8h5.9a15.35,15.35,0,0,1,2,.15,8.47,8.47,0,0,1,2.05.55,4,4,0,0,1,1.57,1.18,3.11,3.11,0,0,1,.63,2A3.71,3.71,0,0,1,181.93,72.72Z\"\n})));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 190.24 81.52\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.08392f18.svg\";\nexport { ForwardRef as ReactComponent };","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBFormInline,\r\n  MDBBadge,\r\n} from \"mdbreact\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ReactComponent as Logo } from './logo.svg';\r\n\r\nimport './header.css';\r\nimport {API_KEY_3, API_URL} from \"../../utils/api\";\r\n\r\nclass NavbarPage extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    searchValue: '',\r\n  };\r\n  \r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  onValueChange = event => {\r\n    this.setState({ searchValue: event.target.value });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { searchValue } = this.state;\r\n\r\n    const {\r\n      history,\r\n      wishlistCount\r\n    } = this.props;\r\n\r\n    const addBage = wishlistCount ? <MDBBadge color=\"danger\" className=\"ml-2\">{ wishlistCount }</MDBBadge> : '';\r\n    return (\r\n      <MDBNavbar className=\"header mb-4\" color=\"unique-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <div\r\n            className=\"logo-holder\"\r\n            onClick={ () => history.push('/movie-imdb/') }\r\n          >\r\n            <Logo />\r\n          </div>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem>\r\n              <MDBNavLink exact to=\"/movie-imdb/\">Home</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink exact to=\"/movie-imdb/wishlist\">Wishlist { addBage }</MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBFormInline\r\n                onSubmit={ event => {\r\n                  event.preventDefault();\r\n                  history.push('/movie-imdb/');\r\n                  const url = `${ API_URL }/search/movie?api_key=${ API_KEY_3 }&language=en-US&query=${ this.state.searchValue }&page=1`;\r\n                  this.setState({ searchValue: '' });\r\n\r\n                  fetch(url)\r\n                    .then(response => {\r\n                      return response.json();\r\n                    })\r\n                    .then(data => {\r\n                      this.props.onSearchSubmit(data.results);\r\n                    });\r\n\r\n                } }\r\n                waves\r\n              >\r\n                <div className=\"md-form my-0\">\r\n                  <input\r\n                    className=\"form-control mr-sm-2\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    value={ searchValue }\r\n                    onChange={ this.onValueChange }\r\n                  />\r\n                </div>\r\n              </MDBFormInline>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavbarPage);","import Header from './header';\r\n\r\nexport default Header;","import MainTitle from './main-title';\r\n\r\nexport default MainTitle;","import React from 'react'\r\nimport {\r\n  MDBCol,\r\n  MDBRow\r\n} from 'mdbreact';\r\n\r\nimport './main-title.css';\r\n\r\nconst MainTitle = ({ title }) => {\r\n  return (\r\n    <MDBRow>\r\n      <MDBCol size=\"12\">\r\n        <h2 className=\"mb-3\">{ title }</h2>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  );\r\n};\r\n\r\nexport default MainTitle;","import Sidebar from './sidebar';\r\n\r\nexport default Sidebar;","import React, { Component } from 'react'\r\nimport {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardHeader,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport { API_KEY_3, API_URL } from \"../../utils/api\";\r\n\r\nimport './sidebar.css';\r\n\r\nclass Sidebar extends Component {\r\n  state = {\r\n    genreList: [],\r\n    languageList: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(`${ API_URL }/genre/movie/list?api_key=${ API_KEY_3 }`)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const newGenreList = data.genres;\r\n        this.setState({ genreList: newGenreList });\r\n      });\r\n\r\n    fetch(`${ API_URL }/configuration/languages?api_key=${ API_KEY_3 }`)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({ languageList: data });\r\n      });\r\n\r\n  }\r\n\r\n  onClearFilterSidebar = () => {\r\n    this.setState({ currentGenre: [] });\r\n    this.props.onClearFilter();\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      genreList,\r\n      languageList,\r\n    } = this.state;\r\n\r\n    const {\r\n      addGenre,\r\n      currentGenre,\r\n      language,\r\n      sort_by,\r\n      removeGenre,\r\n      onChangeLanguage,\r\n      onChangeSort,\r\n    } = this.props;\r\n\r\n    const currentGenreIdList = currentGenre.map(item => item.id);\r\n\r\n    const genresListContent = (\r\n      <div className=\"genre-cloud\">\r\n        {\r\n          genreList.map(genre => {\r\n            const { id, name } = genre;\r\n            const isActive = currentGenreIdList.indexOf(id) !== -1;\r\n            return (\r\n              <button\r\n                className={ `btn ${ isActive ? 'active' : '' }` }\r\n                key={ id }\r\n                onClick={ () => isActive ? removeGenre(genre) : addGenre(genre)  }\r\n              >\r\n                  { name }\r\n              </button>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n\r\n    const selectSortResult = <select\r\n      className=\"custom-select custom-select-sm\"\r\n      onChange={ event => onChangeSort(event.target.value) }\r\n      value={ sort_by }\r\n    >\r\n      <option value=\"popularity.desc\">Popularity Descending</option>\r\n      <option value=\"popularity.asc\">Popularity Ascending</option>\r\n      <option value=\"vote_average.desc\">Rating Descending</option>\r\n      <option value=\"vote_average.asc\">Rating Ascending</option>\r\n      <option value=\"release_date.desc\">Release Date Descending</option>\r\n      <option value=\"release_date.asc\">Release Date Ascending</option>\r\n      <option value=\"original_title.desc\">Title (A-Z)</option>\r\n      <option value=\"original_title.asc\">Title (Z-A)</option>\r\n    </select>;\r\n\r\n    const selectLanguage = <select\r\n        onChange={ event => onChangeLanguage( event.target.value ) }\r\n        className=\"custom-select custom-select-sm mb-3\"\r\n        value={ language }\r\n      >\r\n      { languageList.map(({ iso_639_1, english_name  }) => <option key={ iso_639_1 } value={ iso_639_1 }>{ english_name }</option>) }\r\n    </select>;\r\n\r\n    return (\r\n        <MDBCol lg=\"3\" className=\"sidebar\">\r\n        <MDBCard className=\"mb-4\">\r\n          <MDBCardHeader className=\"pl-3 pr-3 pt-2 pb-2\" color=\"unique-color\">Filter:</MDBCardHeader>\r\n          <MDBCardBody className=\"p-3\">\r\n            <div  className=\"mb-3\">\r\n              <h6>Sort Results By</h6>\r\n              { selectSortResult }\r\n            </div>\r\n\r\n            <div  className=\"mb-3\">\r\n              <h6>Language</h6>\r\n              { selectLanguage }\r\n            </div>\r\n\r\n            <div  className=\"mb-3\">\r\n              <h6>Genres</h6>\r\n              { genresListContent }\r\n            </div>\r\n\r\n            <MDBBtn\r\n              onClick={ this.onClearFilterSidebar }\r\n              size=\"md\"\r\n              className=\"text-center w-100 ml-0 mr-0 mb-0 clear-filter\"\r\n            >Clear Filter</MDBBtn>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;","import CardItem from './card-item';\r\n\r\nexport default CardItem;\r\n","import React from 'react'\r\nimport {\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBCardImage,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n} from 'mdbreact';\r\nimport {\r\n  CircularProgressbar,\r\n  buildStyles,\r\n} from 'react-circular-progressbar';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport noPhoto from './no_photo.jpg';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport './card-item.css';\r\n\r\nconst CardItem = props => {\r\n  const {\r\n    backdrop,\r\n    history,\r\n    imgUrl,\r\n    id,\r\n    overview,\r\n    title,\r\n    voteAverage,\r\n    addMovieWishlist,\r\n    removeMovieWishlist,\r\n    hasWishlist,\r\n  } = props;\r\n  const voteAverageSum = voteAverage * 10;\r\n  const onClickWishlist = () => hasWishlist ? removeMovieWishlist() : addMovieWishlist();\r\n  return (\r\n    <MDBCol md=\"4\" className=\"mb-4 card-item\">\r\n      <MDBCard>\r\n        <div className=\"card-item-photo\">\r\n          <button\r\n            className={ `card-item-btn-wishlist ${ hasWishlist ? 'active' : '' }` }\r\n            onClick={ onClickWishlist }\r\n          >\r\n            { hasWishlist ? <MDBIcon icon=\"heart\" /> : <MDBIcon far icon=\"heart\" /> }\r\n          </button>\r\n          <div\r\n            className=\"card-item-photo-holder\"\r\n            onClick={ () => history.push(`/movie-imdb/movie/${ id }`) }\r\n          >\r\n            <MDBCardImage className=\"img-fluid\" src={ imgUrl ? `https://image.tmdb.org/t/p/w500/${imgUrl}` : noPhoto } waves />\r\n            <MDBCardImage className=\"img-fluid img-fixed\" src={ backdrop ? `https://image.tmdb.org/t/p/w500/${ backdrop }` : noPhoto } waves />\r\n          </div>\r\n          <CircularProgressbar\r\n            value={ voteAverageSum }\r\n            text={`${voteAverageSum}%`}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              backgroundColor: \"#3f729b\",\r\n              textColor: \"#fff\",\r\n              pathColor: \"#fff\",\r\n              trailColor: \"rgba(255, 255, 255, .2)\"\r\n            })}\r\n          />\r\n        </div>\r\n        <MDBCardBody className=\"p-3\">\r\n          <MDBCardTitle className=\"m-0\">{ title }</MDBCardTitle>\r\n          <MDBCardText>{ overview }</MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default withRouter(CardItem);","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-box\">\r\n      <div className=\"spinner-grow text-primary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import CardItemsList from './card-items-list'\r\n\r\nexport default CardItemsList;\r\n","import React from 'react'\r\nimport {\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport CardItem from '../card-item';\r\nimport Spinner from '../spinner';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport './card-items-list.css';\r\n\r\nconst CardItemsList = props => {\r\n  const {\r\n    changeCurrentPage,\r\n    currentPage,\r\n    movieData,\r\n    addMovieWishlist,\r\n    removeMovieWishlist,\r\n    totalPages,\r\n    movieWishlist,\r\n  } = props;\r\n  const movieWishlistIndexList = movieWishlist.map(movie => movie.id);\r\n\r\n  const content = movieData.map(({\r\n      id,\r\n      poster_path: imgUrl,\r\n      overview, title,\r\n      vote_average: voteAverage,\r\n      backdrop_path: backdrop,\r\n    }) => {\r\n    const wishlistData = movieData.filter(movie => movie.id === id);\r\n    const hasWishlist = (movieWishlistIndexList.indexOf(id)) !== -1;\r\n    return (\r\n      <CardItem\r\n        id={ id }\r\n        key={ id }\r\n        imgUrl={ imgUrl }\r\n        overview={ overview }\r\n        title={ title }\r\n        backdrop={ backdrop }\r\n        voteAverage={ voteAverage }\r\n        removeMovieWishlist={ () => removeMovieWishlist(wishlistData) }\r\n        addMovieWishlist={ () => addMovieWishlist(wishlistData) }\r\n        hasWishlist={ hasWishlist }\r\n      />\r\n    );\r\n  });\r\n\r\n  const pagination = <nav className=\"mt-3 mb-3\" aria-label=\"Page navigation\">\r\n    <ReactPaginate\r\n      previousLabel={ '◄' }\r\n      nextLabel={ '►' }\r\n      breakLabel={ '...' }\r\n      pageCount={ totalPages }\r\n      initialPage={ currentPage  - 1}\r\n      marginPagesDisplayed={ 2 }\r\n      pageRangeDisplayed={ 2 }\r\n      onPageChange={ data => changeCurrentPage(data) }\r\n      containerClassName={ 'pagination' }\r\n      pageClassName={ 'page-item' }\r\n      previousClassName={ 'page-item prev' }\r\n      nextClassName={ 'page-item next' }\r\n      breakClassName={ 'page-item' }\r\n      pageLinkClassName={ 'page-link' }\r\n      breakLinkClassName={ 'page-link' }\r\n      previousLinkClassName={ 'page-link' }\r\n      nextLinkClassName={ 'page-link' }\r\n      activeClassName={ 'active' }\r\n    />\r\n  </nav>;\r\n\r\n  return (\r\n    <MDBCol lg=\"9\" className=\"card-items-list\">\r\n      <MDBRow>\r\n        { movieData.length > 0 ? content : <Spinner /> }\r\n      </MDBRow>\r\n\r\n      { pagination }\r\n\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default CardItemsList;","import React from 'react';\r\nimport MainTitle from '../components/main-title';\r\nimport Sidebar from '../components/sidebar';\r\nimport CardItemsList from '../components/card-items-list';\r\nimport { MDBRow } from 'mdbreact';\r\n\r\nconst Home = ({\r\n                addGenre,\r\n                addMovieWishlist,\r\n                changeCurrentPage,\r\n                currentGenre,\r\n                currentPage,\r\n                language,\r\n                movieData,\r\n                movieWishlist,\r\n                removeGenre,\r\n                removeMovieWishlist,\r\n                sort_by,\r\n                totalPages,\r\n                onChangeSort,\r\n                onChangeLanguage,\r\n                onClearFilter,\r\n              }) => {\r\n  return (\r\n    <>\r\n      <MainTitle title=\"Films\" />\r\n      <MDBRow>\r\n        <Sidebar\r\n          addGenre={ addGenre }\r\n          currentGenre={ currentGenre }\r\n          language={ language }\r\n          sort_by={ sort_by }\r\n          removeGenre={ removeGenre }\r\n          onChangeSort={ onChangeSort }\r\n          onChangeLanguage={ onChangeLanguage }\r\n          onClearFilter={ onClearFilter }\r\n        />\r\n        <CardItemsList\r\n          addMovieWishlist={ addMovieWishlist }\r\n          changeCurrentPage={ changeCurrentPage }\r\n          currentPage={ currentPage }\r\n          movieData={ movieData }\r\n          removeMovieWishlist={ removeMovieWishlist }\r\n          movieWishlist={ movieWishlist }\r\n          totalPages={ totalPages }\r\n        />\r\n      </MDBRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","import SingleMovieBackgroundPoster from './single-movie-background-poster';\r\n\r\nexport default SingleMovieBackgroundPoster;","import React from 'react';\r\nimport {\r\n  MDBCardImage,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBRow\r\n} from \"mdbreact\";\r\nimport {\r\n  CircularProgressbar,\r\n  buildStyles,\r\n} from 'react-circular-progressbar';\r\nimport Spinner from '../spinner';\r\n\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport './single-movie-background-poster.css';\r\nimport noPhoto from './no_photo.jpg';\r\n\r\nconst SingleMovieBackgroundPoster = props => {\r\n  const {\r\n    addMovieWishlist,\r\n    backdrop,\r\n    genres,\r\n    hasWishlist,\r\n    link,\r\n    language,\r\n    overview,\r\n    poster,\r\n    releaseDate,\r\n    removeMovieWishlist,\r\n    runtime,\r\n    tagline,\r\n    name,\r\n    vote,\r\n  } = props;\r\n\r\n  const IMG_URL = 'https://image.tmdb.org/t/p/';\r\n\r\n  const voteAverageSum = vote * 10;\r\n  let genreLi = Boolean(genres) && genres.map((item, idx) => (<li key={ idx }>{ item.name }</li>))\r\n  const dateYear = releaseDate && releaseDate.split('').slice(0, 4).join('');\r\n  const runtimeContent = () => {\r\n    const minutesPerHour = runtime / 60;\r\n    const roundedRuntime = Math.floor(minutesPerHour);\r\n    const getTime = runtime - ( roundedRuntime * 60 );\r\n    return `${ Math.floor( roundedRuntime ) }h ${ Math.abs( getTime ) }m`\r\n  }\r\n\r\n  const getFormattedDate = () => {\r\n    const date = new Date(releaseDate);\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'numeric', day: '2-digit' })\r\n    const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(date);\r\n\r\n    return `${day}/${month}/${year }`;\r\n  }\r\n\r\n  const linkContent = (\r\n    (link) && <div className=\"background-poster__link\">\r\n      <a\r\n        target=\"_blank\"\r\n        href={ link }\r\n        rel=\"noopener noreferrer\"\r\n      >Link to site</a>\r\n    </div>\r\n  );\r\n\r\n  const chartContent = (\r\n    <>\r\n      <CircularProgressbar\r\n        value={ voteAverageSum }\r\n        text={`${ voteAverageSum }%`}\r\n        background\r\n        backgroundPadding={6}\r\n        styles={buildStyles({\r\n          backgroundColor: \"#3f729b\",\r\n          textColor: \"#fff\",\r\n          pathColor: \"#fff\",\r\n          trailColor: \"rgba(255, 255, 255, .2)\"\r\n        })}\r\n      />\r\n      <div className='title'>User<br />score</div>\r\n    </>\r\n  );\r\n\r\n  const onClickWishlist = () => hasWishlist() ? removeMovieWishlist() : addMovieWishlist();\r\n\r\n  return (\r\n    <div\r\n      className={`background-poster ${!backdrop && 'no-poster'}`}\r\n      style={ backdrop && { backgroundImage: `url( https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/${ backdrop } )` }}\r\n    >\r\n      <MDBContainer>\r\n        { (!name) &&\r\n          <MDBRow className=\"pt-5 pb-5 align-items-center\">\r\n            <MDBCol md=\"12\">\r\n              <Spinner />\r\n            </MDBCol>\r\n          </MDBRow>\r\n        }\r\n        { (name) &&\r\n          <MDBRow className=\"pt-5 pb-5\">\r\n            <MDBCol md=\"4\">\r\n              <a\r\n                href={ (link) ? link : ''  }\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <MDBCardImage className=\"img-fluid\" src={ poster ? `${ IMG_URL }w500/${ poster }` : noPhoto } waves />\r\n              </a>\r\n            </MDBCol>\r\n            <MDBCol md=\"8\" className=\"background-poster__container-col\">\r\n              <h2 className=\"background-poster__title mb-1\">\r\n                { name }\r\n                <span className=\"background-poster__release-date font-weight-lighter font-italic\"> { dateYear && `(${ dateYear })` }</span>\r\n              </h2>\r\n              <div className=\"background-poster__title-info mb-2\">\r\n                <span className=\"background-poster__date\">{ releaseDate && getFormattedDate() }</span>\r\n                <span className=\"background-poster__language\"> ({ language && language.toUpperCase() })</span>\r\n                <ul className=\"genres\">\r\n                  { genreLi }\r\n                </ul>\r\n                <span className=\"runtime\">{ runtimeContent() }</span>\r\n              </div>\r\n              <ul className=\"background-poster__meta\">\r\n                <li className=\"chart\">\r\n                  { chartContent }\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className={ `card-item-btn-wishlist ${ hasWishlist() ? 'active' : '' }` }\r\n                    onClick={ onClickWishlist }\r\n                  >\r\n                    { hasWishlist() ? <MDBIcon icon=\"heart\" /> : <MDBIcon far icon=\"heart\" /> }\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n              <div className=\"background-poster__tagline\">{ tagline }</div>\r\n              <div className=\"background-poster__description\">\r\n                <h3>{ name }</h3>\r\n                <p>{ overview }</p>\r\n              </div>\r\n              { linkContent }\r\n            </MDBCol>\r\n          </MDBRow>\r\n        }\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleMovieBackgroundPoster;\r\n","import SingleMovieTabs from \"./single-movie-tabs\";\r\n\r\nexport default SingleMovieTabs;","import React, { Component } from 'react';\r\nimport { API_KEY_3, API_URL } from \"../../utils/api\";\r\nimport {\r\n  MDBTabPane,\r\n  MDBTabContent,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n} from \"mdbreact\";\r\n\r\nimport './single-movie-tabs.css';\r\n\r\nexport default class SingleMovieTabs extends Component {\r\n  state = {\r\n    videosData: [],\r\n    postersData: [],\r\n    recomendationsData: [],\r\n    activeItem: '1',\r\n  }\r\n\r\n  getDataVideos = () => {\r\n    const url = `${ API_URL }/movie/${ this.props.id }/videos?api_key=${ API_KEY_3 }`;\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const newData = data.results;\r\n        this.setState({ videosData: newData });\r\n      });\r\n  }\r\n\r\n  getDataPosters = () => {\r\n    const url = `${ API_URL }/movie/${ this.props.id }/images?api_key=${ API_KEY_3 }`;\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n        .then(data => {\r\n        const newData = data.backdrops;\r\n        this.setState({ postersData: newData });\r\n      });\r\n  }\r\n\r\n  getDataRecomendations = () => {\r\n    const url = `${ API_URL }/movie/${ this.props.id }/recommendations?api_key=${ API_KEY_3 }&language=en-US&page=1`;\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const newData = data.results;\r\n        this.setState({ recomendationsData: newData });\r\n      });\r\n  }\r\n\r\n  toggle = tab => e => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.id) return;\r\n    this.getDataVideos();\r\n    this.getDataPosters();\r\n    this.getDataRecomendations();\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      videosData,\r\n      postersData,\r\n      recomendationsData,\r\n    } = this.state;\r\n\r\n    const videoContent = (\r\n      <div className=\"tab-content\">\r\n        { videosData.length && videosData.map(({ key, name }) => {\r\n          return <iframe className=\"embed-responsive-item\" name={ name } title={ name } key={ key } src={ \"https://www.youtube.com/embed/\" + key }></iframe>;\r\n        } ) }\r\n      </div>\r\n    );\r\n\r\n    const posterContent = (\r\n      <div className=\"tab-content\">\r\n        { postersData.length && postersData.map(({ file_path: imgURL }, idx) => {\r\n          return <img src={ 'https://image.tmdb.org/t/p/w500' + imgURL } key={ imgURL } alt={ 'poster-' + idx } className=\"img-fluid img-poster\" />\r\n        } ) }\r\n      </div>\r\n    );\r\n\r\n    const recomendationsContent = (\r\n      <div className=\"tab-content\">\r\n          { recomendationsData.length && recomendationsData.map(({\r\n            id,\r\n            poster_path: imgURL,\r\n            title,\r\n          }) => {\r\n          return (\r\n            <MDBCard\r\n              className=\"tab-card-box\"\r\n              key={ id }\r\n            >\r\n              {\r\n                imgURL && (\r\n                  <div className=\"tab-card-box-photo\">\r\n                    <img src={ 'https://image.tmdb.org/t/p/w500' + imgURL } alt={ title } className=\"img-fluid image\" />\r\n                  </div>\r\n                )\r\n              }\r\n              <MDBCardTitle>{ title }</MDBCardTitle>\r\n            </MDBCard>\r\n          );\r\n        } ) }\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"single-movie-tabs\">\r\n        <h3 className=\"mb-3\">Media</h3>\r\n        <MDBNav className=\"nav-tabs\">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggle(\"1\")} role=\"tab\" >\r\n              Videos\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggle(\"2\")} role=\"tab\" >\r\n              Posters\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggle(\"3\")} role=\"tab\" >\r\n              Recommendations\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            { videoContent }\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            { posterContent }\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            { recomendationsContent }\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport {API_KEY_3, API_URL} from \"../utils/api\";\r\nimport {\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport SingleMovieBackgroundPoster from '../components/single-movie-background-poster';\r\nimport SingleMovieTabs from '../components/single-movie-tabs';\r\n\r\nexport default class SingleMovie extends Component {\r\n  state = {\r\n    movieData: {},\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = `${ API_URL }/movie/${ this.props.id }?api_key=${ API_KEY_3 }&language=en-US`;\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({ movieData: data });\r\n      });\r\n  }\r\n\r\n  checkHasWishlist = () => {\r\n    if (!this.state.movieData.id) return false;\r\n    const wishlistData = this.props.movieWishlist.filter(movie => movie.id === this.state.movieData.id);\r\n    return wishlistData.length > 0;\r\n  }\r\n\r\n  convertNumber(number) {\r\n    return number.toString().split('').reverse().join('').match(/.{1,3}/g).reverse()\r\n      .map(item => item.toString().split('').reverse().join('')).join() + '.00'\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      backdrop_path: backdrop,\r\n      budget,\r\n      genres,\r\n      homepage: link,\r\n      original_language: language,\r\n      overview,\r\n      poster_path: poster,\r\n      release_date: releaseDate,\r\n      revenue,\r\n      runtime,\r\n      status,\r\n      tagline,\r\n      title: name,\r\n      vote_average: vote,\r\n    } = this.state.movieData;\r\n\r\n    const {\r\n      id,\r\n      addMovieWishlist,\r\n      removeMovieWishlist,\r\n    } = this.props;\r\n\r\n    const factsInfo = (\r\n      <ul className=\"facts-info\">\r\n        <li><strong className=\"facts-info__title\">Status</strong><span className=\"facts-info__text\">{ status }</span></li>\r\n        <li><strong className=\"facts-info__title\">Original Language</strong><span className=\"facts-info__text\">{ language && language.toUpperCase() }</span></li>\r\n        <li><strong className=\"facts-info__title\">Budget</strong><span className=\"facts-info__text\">$ { budget && this.convertNumber(budget) }</span></li>\r\n        <li><strong className=\"facts-info__title\">Revenue</strong><span className=\"facts-info__text\">$ { revenue && this.convertNumber(revenue) }</span></li>\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <SingleMovieBackgroundPoster\r\n          addMovieWishlist = { () => addMovieWishlist([this.state.movieData]) }\r\n          backdrop = { backdrop }\r\n          genres = { genres }\r\n          link = { link }\r\n          language = { language }\r\n          overview = { overview }\r\n          poster = { poster }\r\n          releaseDate = { releaseDate }\r\n          removeMovieWishlist = { () => removeMovieWishlist([this.state.movieData]) }\r\n          runtime = { runtime }\r\n          tagline = { tagline }\r\n          name = { name }\r\n          vote = { vote }\r\n          hasWishlist = { this.checkHasWishlist }\r\n        />\r\n        <MDBRow className=\"flex-row-reverse mb-3\">\r\n          <MDBCol md=\"3\">\r\n            { factsInfo }\r\n          </MDBCol>\r\n          <MDBCol md=\"9\">\r\n            <SingleMovieTabs\r\n              id={ id }\r\n            />\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </>\r\n    );\r\n  }\r\n};","import WishlistHeader from './wishlist-header';\r\n\r\nexport default WishlistHeader;","import React from 'react';\r\n\r\nimport './wishlist-header.css';\r\nimport { MDBTableHead } from 'mdbreact';\r\n\r\nconst WishlistHeader = () => {\r\n  return (\r\n    <MDBTableHead color=\"unique-color\" textWhite>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>Image</th>\r\n        <th>Title</th>\r\n        <th\r\n          className=\"text-center\"\r\n          style={{ whiteSpace: \"nowrap\" }}\r\n        ><span className=\"text-warning\">&#9733;</span> Rating</th>\r\n        <th className=\"red-text text-center\">Reject</th>\r\n      </tr>\r\n    </MDBTableHead>\r\n  );\r\n};\r\n\r\nexport default WishlistHeader;\r\n","import WishlistContent from './wishlist-content';\r\n\r\nexport default WishlistContent;","import React from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBTableBody\r\n} from 'mdbreact';\r\n\r\nimport noPhoto from './no_photo.jpg';\r\nimport './wishlist-content.css';\r\n\r\nconst WishlistContent = ({ movieWishlist, removeMovieWishlist }) => {\r\n  const content = movieWishlist.map(({\r\n    id,\r\n    poster_path: poster,\r\n    title,\r\n    vote_average: vote,\r\n  }, inx) => {\r\n      return (\r\n        <tr\r\n          key={ id }\r\n        >\r\n          <td className=\"align-middle\">{ inx + 1 }</td>\r\n          <td>\r\n            <img\r\n              className=\"wishlist-content-image align-middle\" src={ poster ? `https://image.tmdb.org/t/p/w500${ poster }` : noPhoto }\r\n              alt={ title }\r\n            />\r\n          </td>\r\n          <td className=\"align-middle\">{ title }</td>\r\n          <td\r\n            className=\"text-center align-middle\"\r\n          >{ vote }</td>\r\n          <td\r\n            className=\"text-center align-middle\"\r\n          >\r\n            <MDBBtn\r\n              size=\"sm\"\r\n              color=\"red\"\r\n              className=\"text-center m-0\"\r\n              onClick={ () => removeMovieWishlist([{ id }]) }\r\n            >Reject</MDBBtn>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  return (\r\n    <MDBTableBody>\r\n      { content }\r\n    </MDBTableBody>\r\n  );\r\n};\r\n\r\nexport default WishlistContent;\r\n","import React from 'react';\r\nimport { MDBTable} from 'mdbreact';\r\nimport WishlistHeader from '../components/wishlist-header';\r\nimport WishlistContent from '../components/wishlist-content';\r\nimport MainTitle from '../components/main-title';\r\n\r\nconst Wishlist = ({ movieWishlist, removeMovieWishlist }) => {\r\n\r\n  const tableWishlist = <MDBTable responsive>\r\n    <WishlistHeader />\r\n    <WishlistContent\r\n      movieWishlist={ movieWishlist }\r\n      removeMovieWishlist={ removeMovieWishlist }\r\n    />\r\n  </MDBTable>;\r\n\r\n  const noWishlist = <p>Oops. Could you add some movie to the Wishlist?</p>;\r\n\r\n  return (\r\n    <div className=\"wishlist\">\r\n      <MainTitle title=\"Wishlist\" />\r\n      { movieWishlist.length > 0 ? tableWishlist : noWishlist }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","import NotFoundContent from './not-found-content';\r\n\r\nexport default  NotFoundContent;","import React from 'react';\r\nimport img1 from './img/image-asset.jpeg';\r\n\r\nimport './not-found-content.css';\r\n\r\nconst NotFoundContent = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <div className=\"not-found__col-image\">\r\n        <img src={ img1 } alt=\"Logo\" />\r\n      </div>\r\n\r\n      <div className=\"not-found__col-text text-center\">\r\n        <h1>AWWW...DON’T CRY.</h1>\r\n        <p>It's just a 404 Error!<br />What you’re looking for may have been misplaced in Long Term Memory.</p>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundContent;\r\n","import React from 'react';\r\nimport NotFoundContent from '../components/not-found-content';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <NotFoundContent />\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Footer from './footer';\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\n\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBRow className=\"footer\">\r\n      <MDBCol\r\n        size=\"12\"\r\n        className=\"unique-color dark white-text text-center\"\r\n        >© 2020 Movie IMDb, LLC. All rights reserved.</MDBCol>\r\n    </MDBRow>\r\n  );\r\n}\r\n\r\nexport default Footer;","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react'\r\nimport { MDBContainer } from 'mdbreact';\r\nimport Header from '../header';\r\nimport {\r\n  Home,\r\n  Wishlist,\r\n  SingleMovie,\r\n  NotFound, } from '../../pages';\r\nimport Footer from '../footer';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport { API_URL, API_KEY_3 } from '../../utils/api';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  thisMovieWishlist = window.localStorage.getItem('movieWishlist')\r\n    ? JSON.parse(window.localStorage.getItem('movieWishlist')) : [];\r\n\r\n  isSearchActive = false;\r\n\r\n  state = {\r\n    currentPage: 1,\r\n    currentGenre: [],\r\n    language: 'en-US',\r\n    movieData: [],\r\n    movieWishlist: this.thisMovieWishlist,\r\n    sort_by: 'popularity.desc',\r\n    totalPages: 0,\r\n  }\r\n\r\n  getMovies() {\r\n    const newGenreIdList = this.state.currentGenre.map(genre => genre.id).join(',');\r\n    const addGenre = newGenreIdList ? `&with_genres=${ newGenreIdList }` : '';\r\n    const url = `${ API_URL }/discover/movie?api_key=${ API_KEY_3 }&sort_by=${ this.state.sort_by }&page=${ this.state.currentPage }&language=${ this.state.language }${ addGenre }`;\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const { results, total_pages  } = data;\r\n        this.setState({\r\n          movieData: results,\r\n          totalPages: total_pages,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() { this.getMovies(); }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if ( this.isSearchActive ) return;\r\n    if (\r\n      ( prevState.sort_by !== this.state.sort_by )\r\n      || ( prevState.language !== this.state.language )\r\n      || ( prevState.currentGenre !== this.state.currentGenre)\r\n      || ( prevState.currentPage !== this.state.currentPage)\r\n    ) {\r\n      this.getMovies();\r\n    }\r\n  }\r\n\r\n  removeMovieWishlist = ([{ id }]) => {\r\n    this.setState(state => {\r\n      const newMovieWishlist = state.movieWishlist.filter(movie => {\r\n        return movie.id !== id;\r\n      });\r\n      window.localStorage.setItem('movieWishlist', JSON.stringify(newMovieWishlist));\r\n      return {\r\n        movieWishlist: newMovieWishlist,\r\n      }\r\n    });\r\n  }\r\n\r\n  addMovieWishlist = data => {\r\n    this.setState(state => {\r\n      const newMovieWishlist = [...state.movieWishlist, ...data];\r\n      window.localStorage.setItem('movieWishlist', JSON.stringify(newMovieWishlist));\r\n      return { movieWishlist: newMovieWishlist, }\r\n    });\r\n  }\r\n\r\n  onChangeSort = sort_by => {\r\n    this.setState({ sort_by });\r\n  }\r\n\r\n  onChangeLanguage = language => {\r\n    this.setState({ language });\r\n  }\r\n\r\n  onClearFilter = () => {\r\n    this.setState({\r\n      sort_by: 'popularity.desc',\r\n      currentGenre: [],\r\n      language: 'en-US',\r\n      currentPage: 1,\r\n    });\r\n  }\r\n\r\n  addGenre = data => {\r\n    this.setState(({ currentGenre }) => {\r\n      const newCurrentGenre = [...currentGenre, data];\r\n      return { currentGenre: newCurrentGenre, }\r\n    });\r\n  }\r\n\r\n  removeGenre = data => {\r\n    this.setState(({ currentGenre }) => {\r\n      const newCurrentGenre = currentGenre.filter(({ id }) => id !== data.id);\r\n      return { currentGenre: newCurrentGenre, }\r\n    });\r\n  }\r\n\r\n  changeCurrentPage = data => {\r\n    const newData = data.selected + 1;\r\n    this.setState({ currentPage: newData, });\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  }\r\n\r\n  onSearchSubmit = data => {\r\n    this.isSearchActive = true;\r\n    this.onClearFilter();\r\n    this.isSearchActive = false;\r\n    this.setState({ movieData: data });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentGenre,\r\n      currentPage,\r\n      totalPages,\r\n      language,\r\n      sort_by,\r\n      movieData,\r\n      movieWishlist,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Header\r\n          wishlistCount={ movieWishlist.length }\r\n          onSearchSubmit={ this.onSearchSubmit }\r\n        />\r\n        <MDBContainer>\r\n          <Switch>\r\n            <Route\r\n              path=\"/movie-imdb/\"\r\n              exact\r\n            >\r\n              <Home\r\n                addGenre={ this.addGenre }\r\n                addMovieWishlist={ this.addMovieWishlist }\r\n                changeCurrentPage={ this.changeCurrentPage }\r\n                currentGenre={ currentGenre }\r\n                currentPage={ currentPage }\r\n                language={ language }\r\n                movieData={ movieData }\r\n                movieWishlist={ movieWishlist }\r\n                removeGenre={ this.removeGenre }\r\n                removeMovieWishlist={ this.removeMovieWishlist }\r\n                sort_by={ sort_by }\r\n                totalPages={ totalPages }\r\n                onChangeSort={ this.onChangeSort }\r\n                onChangeLanguage={ this.onChangeLanguage }\r\n                onClearFilter={ this.onClearFilter }\r\n              />\r\n            </Route>\r\n            <Route\r\n              path=\"/movie-imdb/wishlist\"\r\n              exact\r\n            >\r\n              <Wishlist\r\n                movieWishlist={ movieWishlist }\r\n                removeMovieWishlist={ this.removeMovieWishlist }\r\n              />\r\n            </Route>\r\n            <Route\r\n              path=\"/movie-imdb/movie/:id\"\r\n              render={ ({ match }) => {\r\n                const { id } = match.params;\r\n                return <SingleMovie\r\n                  id={ id }\r\n                  movieWishlist={ movieWishlist }\r\n                  addMovieWishlist={ this.addMovieWishlist }\r\n                  removeMovieWishlist={ this.removeMovieWishlist }\r\n                />\r\n              } }\r\n            />\r\n            <Route component={ NotFound } />\r\n          </Switch>\r\n        </MDBContainer>\r\n        <Footer />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport App from './components/app';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(  <App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/no_photo.54120d3b.jpg\";"],"sourceRoot":""}